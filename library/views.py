# Link on GitHub: https://github.com/viacheslav-bandylo/111124-projects/blob/main/library/views.py

from datetime import datetime
from django.db.models import Avg, Count
from django_filters.rest_framework import DjangoFilterBackend
from rest_framework.authentication import BasicAuthentication, TokenAuthentication
from rest_framework.decorators import api_view, action
from rest_framework.exceptions import NotFound
from rest_framework.generics import (GenericAPIView, ListCreateAPIView,
                                     RetrieveUpdateDestroyAPIView, ListAPIView)
from rest_framework.permissions import (IsAuthenticated, AllowAny, IsAdminUser,
                                        IsAuthenticatedOrReadOnly, DjangoModelPermissions)
from rest_framework.response import Response
from rest_framework import status, filters, mixins
from rest_framework.views import APIView
from rest_framework.pagination import PageNumberPagination, LimitOffsetPagination, CursorPagination
from rest_framework.viewsets import ReadOnlyModelViewSet, ModelViewSet, GenericViewSet
from django.db import reset_queries, connection, transaction

from library.models import Book, Genre, Publisher, SimpleBook
from library.permissions import IsOwnerOrReadOnly, CanGetGenresStatisticPermission
from library.serializers import (BookSerializer, BookDetailSerializer,
                                 # BookListSerializer,
                                 BookCreateSerializer, GenreSerializer, SimpleBookSerializer)



#
class ReadOnlyOrAuthenticatedView(APIView):
    permission_classes = [IsAuthenticatedOrReadOnly]

    def get(self, request):
        return Response({"message": "This is readable by anyone, but modifiable only by authenticated users."})

    def post(self, request):
        # –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:
        return Response({"message": "Data created by authenticated user."})


#
class AdminView(APIView):
    permission_classes = [IsAdminUser]

    def get(self, request):
        return Response({"message": "Hello, Admin!"})



#
class PublicView(APIView):
    permission_classes = [AllowAny]

    # ??????????????????? format=None
    def get(self, request, format=None):
        return Response(status=status.HTTP_200_OK, data={'message': 'This endpoint has access for anyone!'})


#
class ProtectedDataView(APIView):
    # –£–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫–∏–µ –∫–ª–∞—Å—Å—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è.
    # –ó–¥–µ—Å—å –º—ã —è–≤–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º BasicAuthentication.
    # authentication_classes = [BasicAuthentication]
    # authentication_classes = [TokenAuthentication]

    # –ï—Å–ª–∏ JWTAuthentication —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ DEFAULT_AUTHENTICATION_CLASSES,
    # –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —É–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è. DRF —Å–∞–º –ø—Ä–æ–≤–µ—Ä–∏—Ç —Ç–æ–∫–µ–Ω.

    # –£–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫–∏–µ –∫–ª–∞—Å—Å—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
    # IsAuthenticated –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø.
    permission_classes = [IsAuthenticated]

    def get(self, request):
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –¥–æ—à–µ–ª —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.
        # request.user —Ç–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        return Response({'message': f'Hello, authenticated user {request.user.username}!',
                         'user': request.user.username})


# \\\\\\\\   @api_view   /////////////////////////////////////////////////////////////////////

# ___  –î–µ–∫–æ—Ä–∞—Ç–æ—Ä @api_view  ___
# Les22-Django_22-REST_p1_Serializer-26_06.pdf, pp. 46-52.
# –ü–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å Function-Based
# Views –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤.
#   ‚óè –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤.
#   ‚óè –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤ View.
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ GET, POST, PUT, PATCH, DELETE
# –£–ø—Ä–æ—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ API, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –º–Ω–æ–≥–∏–µ –∑–∞–¥–∞—á–∏.


# See   Les22-Django_22-REST_p1_Serializer-26_06.pdf, page 60.
# @api_view(['GET', 'POST'])
# def book_list_create(request):
#     if request.method == 'GET':
#         books = Book.objects.all()
#         serializer = BookListSerializer(books, many=True)       # –ì–î–ï:
#         #   books - –î–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è - –º–∞—Å—Å–∏–≤ —Å–æ –≤—Å–µ–º–∏ –∫–Ω–∏–≥–∞–º–∏.
#         #   many=True - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ —ç—Ç–æ –º–∞—Å—Å–∏–≤.
#         return Response(serializer.data, status=status.HTTP_200_OK)
#     elif request.method == 'POST':
#         serializer = BookCreateSerializer(data=
#         # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –ª–∏ –¥–∞–Ω–Ω—ã–µ. –ï—Å–ª–∏ –Ω–µ—Ç - –≤—ã–∑–æ–≤–µ—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:
#         if serializer.is_valid():
#             serializer.save()
#             return Response(serializer.data, status=status.HTTP_201_CREATED)
#         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)


# serializer.is_valid()
# üîπ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –ª–∏ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏–ª
#    (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ POST-–∑–∞–ø—Ä–æ—Å–∞).
# üîπ –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å—é –≤–∞–ª–∏–¥–∞—Ü–∏—é, –≤–∫–ª—é—á–∞—è:
#       - –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö,
#       - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π,
#       - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π (max_length, unique –∏ —Ç.–¥.),
#       - –∫–∞—Å—Ç–æ–º–Ω—ã—Ö validate_ –º–µ—Ç–æ–¥–æ–≤.
#     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
#       - True, –µ—Å–ª–∏ –≤—Å—ë –æ–∫,
#       - False, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ.
#
# raise_exception=True
# üîπ –ì–æ–≤–æ—Ä–∏—Ç DRF: –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é ‚Äî —Å—Ä–∞–∑—É –≤—ã–±—Ä–æ—Å–∏—Ç—å
#    –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ValidationError.
# üîπ DRF –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏ –≤–µ—Ä–Ω—ë—Ç –∫–ª–∏–µ–Ω—Ç—É
#    –∫—Ä–∞—Å–∏–≤—ã–π JSON-–æ—Ç–≤–µ—Ç —Å –∫–æ–¥–æ–º 400 Bad Request.


# @api_view(['GET', 'PUT', 'DELETE'])
# def book_detail_update_delete(request, pk):
#     try:
#         book = Book.objects.get(pk=pk)
#     except Book.DoesNotExist:
#         return Response({'error': 'Book not found'}, status=status.HTTP_404_NOT_FOUND)
#
#     if request.method == 'GET':
#         serializer = BookDetailSerializer(book)
#         return Response(serializer.data, status=status.HTTP_200_OK)
#
#     elif request.method == 'PUT':
#         serializer = BookCreateSerializer(book, data=request.data)
#         if serializer.is_valid():
#             serializer.save()
#             return Response(serializer.data, status=status.HTTP_200_OK)
#         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
#
#     elif request.method == 'DELETE':
#         book.delete()
#         return Response({'message': 'Book deleted successfully.'}, status=status.HTTP_204_NO_CONTENT)


#
@api_view(['POST'])
def create_genre(request):
    serializer = GenreSerializer(data=request.data)
    if serializer.is_valid():
        serializer.save()
        return Response(serializer.data, status=status.HTTP_200_OK)
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã:
    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)


#
@api_view(['GET'])
def books_by_date_view(request, year=None, month=None, day=None):
    # Django –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –∑–∞—Ö–≤–∞—á–µ–Ω–Ω—ã–µ 'year', 'month', 'day' –≤ —Ñ—É–Ω–∫—Ü–∏—é:
    books = Book.objects.filter(publication_date__year=year,
                                publication_date__month=month,
                                publicztion_dat__day=day)
    serializer = BookSerializer(books, many=True)
    return Response({'date': f"{year}-{month}-{day}", 'books': serializer.data})


#
@api_view(['GET'])
def lazy_load_demo(request):
    # Endpoint for testing lazy load.
    reset_queries()

    # ___  NB!  ____________________
    # –≠—Ç–æ—Ç –∫–æ–¥ –û–ß–ï–ù–¨ –ù–ï–≠–§–§–ï–ö–¢–ò–í–ï–ù!
    # 1-–π –∑–∞–ø—Ä–æ—Å: –ø–æ–ª—É—á–∏—Ç—å –í–°–ï –∫–Ω–∏–≥–∏:
    # books = Book.objects.all()
    # _______________________________

    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –ø–æ–º–æ—â—å—é select_related:
    books = Book.objects.select_related('publisher').all()      # üî∂ –í—Å–µ–≥–æ –û–î–ò–ù –∑–∞–ø—Ä–æ—Å!
    print(connection.queries)
    for book in books:
        # –î–ª—è –ö–ê–ñ–î–û–ô –∫–Ω–∏–≥–∏ –¥–µ–ª–∞–µ—Ç—Å—è –û–¢–î–ï–õ–¨–ù–´–ô –∑–∞–ø—Ä–æ—Å –∫ –ë–î, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–∑–¥–∞—Ç–µ–ª—è:
        print(book.publisher.name)      # N –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
    print(connection.queries)
    print("#" * 100)
    reset_queries()

    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –ø–æ–º–æ—â—å—é prefetch_related:
    books = Book.objects.prefetch_related('genres').all()        # üî∂ –í—Å–µ–≥–æ –î–í–ê –∑–∞–ø—Ä–æ—Å–∞!
    for book in books:
        print("Book: ", book.title)
        # –î–æ—Å—Ç—É–ø –∫ book.genres.all() —Ç–µ–ø–µ—Ä—å –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:
        for genre in book.genres.all():
            print("   - Genre: ", genre.name)
    print(connection.queries)
    print("#" * 100)
    reset_queries()

    books = Book.objects.select_related('publisher').prefetch_related('genres').all()    # üî∂ –í—Å–µ –µ—â–µ 2 –∑–∞–ø—Ä–æ—Å–∞!
    for book in books:
        print("Book: ", book.title)
        print(book.publisher.name)
        # –î–æ—Å—Ç—É–ø –∫ book.genres.all() —Ç–µ–ø–µ—Ä—å –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:
        for genre in book.genres.all():
            print("   - Genre: ", genre.name)
    print(connection.queries)

    return Response({"data": 'Success!'})



# _____  –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø  –≤  –º–µ—Ç–æ–¥–µ POST  _____
# –°–æ–∑–¥–∞–Ω–∏–µ –ö–ù–ò–ì–ò –∏ –ò–ó–î–ê–¢–ï–õ–Ø.
@api_view(['POST'])
def create_book_and_publisher_view(request):
    try:
        # –í—Å–µ, —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–≥–æ –±–ª–æ–∫–∞, ‚Äî –æ–¥–Ω–∞ –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø:
        with transaction.atomic():
            # 1. –°–æ–∑–¥–∞–µ–º –∏–∑–¥–∞—Ç–µ–ª—è:
            publisher = Publisher.objects.create(name="Super Publisher", established_date=datetime.now())
            # –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ —Å–æ–∑–¥–∞–¥–∏–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–∫–∞—Ç:
            if not request.data.get('title'):
                raise ValueError("The NAME of the Book is obligate!")

            # 2. –°–æ–∑–¥–∞–µ–º –∫–Ω–∏–≥—É:
            # –≠—Ç–æ—Ç –∫–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç –æ—à–∏–±–∫–∞ –≤—ã—à–µ
            book = Book.objects.create(
                title=request.data.get('title'),
                publisher=publisher
            )
        # –ï—Å–ª–∏ –±–ª–æ–∫ with –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫, —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è (commit).
    except Exception as e:
        # –ï—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ with –ø—Ä–æ–∏–∑–æ—à–ª–∞ –ª—é–±–∞—è –æ—à–∏–±–∫–∞, –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î
        # (—Å–æ–∑–¥–∞–Ω–∏–µ Publisher) –±—É–¥—É—Ç –æ—Ç–º–µ–Ω–µ–Ω—ã (rollback):
        return Response({'error': str(e)}, status=400)

    return Response({'status': 'Book and Publisher are created.'})



# _____  –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø  –≤  –î–ï–ö–û–†–ê–¢–û–†–ï  @transaction.atomic  _____
# –°–æ–∑–¥–∞–Ω–∏–µ –ö–ù–ò–ì–ò –∏ –ò–ó–î–ê–¢–ï–õ–Ø.
@api_view(['POST'])
@transaction.atomic     # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∫–æ –≤—Å–µ–π —Ñ—É–Ω–∫—Ü–∏–∏!
def create_book_and_publisher_view(request):
    try:
        # 1. –°–æ–∑–¥–∞–µ–º –∏–∑–¥–∞—Ç–µ–ª—è:
        publisher = Publisher.objects.create(name='Name of a new Publisher')

        # 2. –°–æ–∑–¥–∞–µ–º –∫–Ω–∏–≥—É:
        book = Book.objects.create(
            title='A new Book',
            publisher=publisher
        )

        # ... –¥—Ä—É–≥–∞—è –ª–æ–≥–∏–∫–∞ ...

    except Exception as e:
        # –ï—Å–ª–∏ –∑–¥–µ—Å—å –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –æ—à–∏–±–∫–∞, –≤—Å—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞
        # –∏ –Ω–∏ –∫–Ω–∏–≥–∞, –Ω–∏ –∏–∑–¥–∞—Ç–µ–ª—å –Ω–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î.
        return Response({'error': str(e)}, status=400)

    seriralizer = BookSerializer(book)
    return Response(seriralizer.data)




# \\\\\\\\   APIView   /////////////////////////////////////////////////////////////////////

# See   Les24-Django_24-REST_p2-14_07-pyth_25.pdf, page 58, 60.
# –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –º–æ–¥–µ–ª–∏ Book —á–µ—Ä–µ–∑ APIView:
# class BookListCreateView(APIView, PageNumberPagination):
#     page_size = 2
#
#     # –ü–ï–†–ï–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ GET –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –º–æ–¥–µ–ª–∏ Book:
#     def get(self, request):
#
#         # _____  Filter  _____
#         filters = {}
#         title = request.query_params.get('title')
#         published_year = request.query_params.get('pub_year')
#         if title:
#             filters['title'] = title
#         if published_year:
#             filters['published_year'] = published_year
#
#         books = Book.objects.filter(**filters)
#
#         # _____  Sorting  _____
#         # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä 'sort_by'. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ 'title':
#         sort_by = request.query_params.get('sort_by', 'title')
#         # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä 'sort_order'. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é ('asc'):
#         sort_order = request.query_params.get('sort_order', 'asc')
#         # –ï—Å–ª–∏ –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ 'desc' (—É–±—ã–≤–∞–Ω–∏–µ)... :
#         if sort_order == 'desc':
#             # ...–¥–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω—É—Å –ø–µ—Ä–µ–¥ –∏–º–µ–Ω–µ–º –ø–æ–ª—è –¥–ª—è —É–±—ã–≤–∞—é—â–µ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
#             sort_by = f'-{sort_by}'
#         # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É:
#         books = books.order_by(sort_by)
#
#         # _____  Pagination  _____
#         requested_page_size = self.get_page_size(request)
#         self.page_size = requested_page_size
#         result = self.paginate_queryset(books, request, view=self)
#
#         serializer = BookListSerializer(result, many=True)
#         return self.get_paginated_response(serializer.data)
#
#     def get_page_size(self,request):
#         page_size_param = request.query_params.get('page_size')
#         if page_size_param and page_size_param.isdigit():
#             return int(page_size_param)
#         return self.page_size
#
#     # –ü–ï–†–ï–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ POST –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –º–æ–¥–µ–ª–∏ Book:
#     def post(self, request):
#         serializer = BookCreateSerializer(data=request.data)
#         if serializer.is_valid():
#             serializer.save()
#             return Response(serializer.data, status=status.HTTP_201_CREATED)
#         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)



# # –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (—á—Ç–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ):
# class BookDetailUpdateDeleteView(APIView):
#
#     # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î:
#     def get(self, request, pk):
#         try:
#             book = Book.objects.get(pk=pk)
#         except Book.DoesNotExist:
#             return Response({'error': 'Book not found.'}, status=status.HTTP_404_NOT_FOUND)
#         serializer = BookDetailSerializer(book)
#         return Response(serializer.data)
#
#     # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î:
#     def put(self, request, pk):
#         try:
#             book = Book. objects.get(pk=pk)
#         except Book.DoesNotExist:
#             return Response({'error': 'Book not found.'}, status=status.HTTP_404_NOT_FOUND)
#         serializer = BookCreateSerializer(book, data=request.data)
#         if serializer.is_valid():
#             serializer.save()
#             return Response(serializer.data)
#         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
#
#     # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î:
#     def delete(self, request, pk):
#         try:
#             book = Book.objects.get(pk=pk)
#         except Book.DoesNotExist:
#             return Response({'error': 'Book not found.'}, status=status.HTTP_404_NOT_FOUND)
#         book.delete()
#         return Response(status=status.HTTP_204_NO_CONTENT)




# \\\\\\\\   GenericAPIView   /////////////////////////////////////////////////////////////////////

# –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –º–æ–¥–µ–ª–∏ Book —á–µ—Ä–µ–∑ GenericAPIView:
#   Les27-Django_25-REST_p3-16_07.pdf:
#       - GenericAPIView - s. 7.
#       - class BookListView(GenericAPIView) - s. 12.
# class BookListCreateView(GenericAPIView):
#     # 1. –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å–æ –≤—Å–µ–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ –º–æ–¥–µ–ª–∏ Book:
#     queryset = Book.objects.all()
#     # 2. –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å BookSerializer:
#     serializer_class = BookSerializer
#
#     # ___ –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ GET-–∑–∞–ø—Ä–æ—Å–∞ (–ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞):
#     def get(self, request, *args, **kwargs):
#         # 1. –ü–æ–ª—É—á–∞–µ–º –Ω–∞–±–æ—Ä –≤—Å–µ—Ö –∫–Ω–∏–≥ —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞:
#         queryset = self.get_queryset()
#         # 2. –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –Ω–∞–±–æ—Ä –æ–±—ä–µ–∫—Ç–æ–≤ (many=True —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –æ–±—ä–µ–∫—Ç–æ–≤ –º–Ω–æ–≥–æ):
#         serializer = self.get_serializer(queryset, many=True)
#         # 3. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
#         return Response(serializer.data)
#
#     # ___ –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ POST-–∑–∞–ø—Ä–æ—Å–∞ (—Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞):
#     def post(self, request, *args, **kwargs):
#         # 1. –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä:
#         serializer = self.get_serializer(data=request.data)
#         # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –ª–∏ –¥–∞–Ω–Ω—ã–µ. –ï—Å–ª–∏ –Ω–µ—Ç - –≤—ã–∑–æ–≤–µ—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:
#         serializer.is_valid(raise_exception=True)
#         # 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:
#         serializer.save()
#         # 4. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –∏ —Å—Ç–∞—Ç—É—Å 201 CREATED:
#         return Response(serializer.data, status=status.HTTP_201_CREATED)



# –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (—á—Ç–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ):
# class BookDetailUpdateDeleteView(GenericAPIView):
#     queryset = Book.objects.all()
#     serializer_class = BookSerializer
#
#     # –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ GET-–∑–∞–ø—Ä–æ—Å–∞ (–ø–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞):
#     def get(self, request, *args, **kwargs):
#         # 1. –ü–æ–ª—É—á–∞–µ–º –æ–¥–∏–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø–æ –µ–≥–æ pk (id) –∏–∑ URL:
#         book = self.get_object()
#         # 2. –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –µ–≥–æ:
#         serializer = self.get_serializer(book)
#         # 3. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç:
#         return Response(serializer.data)
#
#     # –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ PUT-–∑–∞–ø—Ä–æ—Å–∞ (–ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ):
#     def put(self, request, *args, **kwargs):
#         # 1. –ü–æ–ª—É—á–∞–µ–º –æ–¥–∏–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø–æ –µ–≥–æ pk (id) –∏–∑ URL:
#         book = self.get_object()
#         # 2. –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –µ–≥–æ:
#         serializer = self.get_serializer(book, data=request.data)
#         # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –ª–∏ –¥–∞–Ω–Ω—ã–µ. –ï—Å–ª–∏ –Ω–µ—Ç - –≤—ã–∑–æ–≤–µ—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:
#         serializer.is_valid(raise_exception=True)
#         serializer.save()
#         return Response(serializer.data)
#
#     # –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ PATCH-–∑–∞–ø—Ä–æ—Å–∞ (—á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ):
#     def patch(self, request, *args, **kwargs):
#         # 1. –ü–æ–ª—É—á–∞–µ–º –æ–¥–∏–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø–æ –µ–≥–æ pk (id) –∏–∑ URL:
#         book = self.get_object()
#         # partial=True –≥–æ–≤–æ—Ä–∏—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä—É, —á—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç–∏—á–Ω–æ–µ:
#         serializer = self.get_serializer(book, data=request.data, partial=True)
#         serializer.is_valid(raise_exception=True)
#         serializer.save()
#         return Response(serializer.data)
#
#     # –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ DELETE-–∑–∞–ø—Ä–æ—Å–∞ (—É–¥–∞–ª–µ–Ω–∏–µ):
#     def delete(self, request, *args, **kwargs):
#         # 1. –ü–æ–ª—É—á–∞–µ–º –æ–¥–∏–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø–æ –µ–≥–æ pk (id) –∏–∑ URL:
#         book = self.get_object()
#         book.delete()
#         # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 204 NO CONTENT:
#         return Response(status=status.HTTP_204_NO_CONTENT)





# \\\\\\\\   PAGINATION   /////////////////////////////////////////////////////////////////////

# –°–æ–∑–¥–∞–µ–º —Å–≤–æ–π –∫–ª–∞—Å—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–∏:
class BookPagination(PageNumberPagination):
    page_size = 3                           # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
    page_size_query_param = 'page_size'     # –ò–º—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤ URL –¥–ª—è –∑–∞–¥–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    max_page_size = 100                     # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.


# 1. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–ª–∞—Å—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–∏:
class BookCursorPagination(CursorPagination):
    page_size = 5
    # __ –í–ê–ñ–ù–û __ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
    ordering = 'publication_date'



# \\\\\\\\   Generic Views  /////////////////////////////////////////////////////////////////////

# –°–º–æ—Ç—Ä–∏ –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ Views –≤ Les24-Django_24-REST_p2-14_07-pyth_25.pdf, —Å. 31-37 "Class-Based Views".
# ___ Class-Based Views (CBV) - –ø–æ–¥—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π DRF, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
#     —Ä–µ–∞–ª–∏–∑—É—é—Ç—Å—è –∫–∞–∫ –∫–ª–∞—Å—Å—ã. CBV –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥,
#     –ø–æ–∑–≤–æ–ª—è—è –ª—É—á—à–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å, —Ä–∞—Å—à–∏—Ä—è—Ç—å –∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–¥.
# CBV –¥–µ–ª—è—Ç—Å—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –æ—Ç –±–∞–∑–æ–≤—ã—Ö –¥–æ –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã—Ö.
# –ö–∞–∂–¥–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π.
# ___ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ Class-Based Views:
#       üí¢ –ë–ê–ó–û–í–ê–Ø - –ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è.
#           üî∑ APIView: –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è CBV.
#                  –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤.
#                  –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π —Å –Ω—É–ª—è, —Ç—Ä–µ–±—É—é—â–∏—Ö —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–π –ª–æ–≥–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.
#       üí¢ GenericAPIView –∏ –ú–∏–∫—Å–∏–Ω—ã - –°—Ä–µ–¥–Ω–∏–π –£—Ä–æ–≤–µ–Ω—å.
#           üî∑ GenericAPIView: –†–∞—Å—à–∏—Ä—è–µ—Ç APIView –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å.
#                   –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏, —Ç—Ä–µ–±—É—é—â–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π
#                   —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–µ–∑ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞.
#           üî∑ Mixin-s:  –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã, –¥–æ–±–∞–≤–ª—è—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å CRUD –∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è–º (–°—Ä–µ–¥–Ω–∏–π –£—Ä–æ–≤–µ–Ω—å).
#                   –ö–æ–º–±–∏–Ω–∞—Ü–∏—è –º–∏–∫—Å–∏–Ω–æ–≤ —Å GenericAPIView –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ CRUD.
#       üí¢ Generic Views - –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è.
#           üî∑ Generic Views: –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—ä–µ–¥–∏–Ω—è—é—Ç GenericAPIView –∏ –º–∏–∫—Å–∏–Ω—ã –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —á–∞—Å—Ç–æ
#                   –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π.
#                   –ü–æ–∑–≤–æ–ª—è—é—Ç –±—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è CRUD, –Ω–µ —Ç—Ä–µ–±—É—è —è–≤–Ω–æ–≥–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è
#                   –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.
#                   –í–ò–î–´ Generic Views:
#                       1. ListAPIView - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤.
#                       2. CreateAPIView - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
#                       3. RetrieveAPIView - –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
#                       4. UpdateAPIView - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
#                       5. DestroyAPIView - –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞.
#                       6. __ListCreateAPIView__ - –ö–æ–º–±–∏–Ω–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞.
#                       7. RetrieveUpdateAPIView - –ö–æ–º–±–∏–Ω–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞.
#                       8. RetrieveDestroyAPIView - –ö–æ–º–±–∏–Ω–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞.
#                       9. RetrieveUpdateDestroyAPIView - –ö–æ–º–±–∏–Ω–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏—è, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞.
#                   "Generic Views" –¥–µ—Ç–∞–ª—å–Ω–æ –ø–æ –≤–∏–¥–∞–º - Les24-Django_24-REST_p2-14_07-pyth_25.pdf, —Å. 36.
#           üî∑ ViewSets:
#                   –í–ò–î–´:
#                       1. ModelViewSet - –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –æ–ø–µ—Ä–∞—Ü–∏–π CRUD. ModelViewSet –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç
#                          –≤—Å–µ generic-–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ –º–∏–∫—Å–∏–Ω—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π.
#                          –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω—ã—Ö CRUD –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –º–æ–¥–µ–ª–µ–π —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π.
#                       2. ReadOnlyModelViewSet - –¢–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–∏ —á—Ç–µ–Ω–∏—è (retrieve - –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –∏ list).
#                          –î–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π, –≥–¥–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å, –æ–±–Ω–æ–≤–ª—è—Ç—å –∏–ª–∏ —É–¥–∞–ª—è—Ç—å –æ–±—ä–µ–∫—Ç—ã, –∞ —Ç–æ–ª—å–∫–æ —á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ.


# BookListCreateView on ListCreateAPIView –∫–ª–∞—Å—Å –∑–∞–º–µ–Ω—è–µ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π BookListCreateView, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —Å–æ–∑–¥–∞–Ω –≤—ã—à–µ —Å–Ω–∞—á–∞–ª–∞ –≤ APIView,
# –∞ –ø–æ—Ç–æ–º –≤ GenericAPIView, –∏ –≤–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω.
# –¢–µ–ø–µ—Ä—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç ListCreateAPIView –∏–∑ rest_framework.generics, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ —É–º–µ–µ—Ç:
#   - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å GET –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ (List)
#   - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å POST –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ (Create)
class BookListCreateView(ListCreateAPIView):
    queryset = Book.objects.all()
    serializer_class = BookSerializer

    # pagination_class = BookPagination         # –í–æ—Ç –∑–¥–µ—Å—å –º—ã –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é.
    # pagination_class = LimitOffsetPagination    # –ü—Ä–æ—Å—Ç–æ –ø–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
    pagination_class = BookCursorPagination

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –±—ç–∫–µ–Ω–¥—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
    filters_backends = [DjangoFilterBackend, filters.SearchFilter, filters.OrderingFilter]
    # –ü–æ–ª—è, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ç–æ—á–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å (author=...):
    filters_fields = ['author', 'genres']
    # –ü–æ–ª—è, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫ (search=...):
    search_fields = ['title', 'description']
    # –ü–æ–ª—è, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å (ordering=...):
    ordering_fields = ['publication_date', 'price']

    # ___ AUTHENTICATION ___
    permission_classes = [IsAuthenticatedOrReadOnly]

    # –ü–ï–†–ï–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ Book:
    def perform_create(self, serializer):
        # –ü—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞ –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä owner,
        # –≤ –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∑–∞–ø—Ä–æ—Å–∞.
        serializer.save(owner=self.request.user)

    # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ create:
    def create(self, request, *args, **kwargs):
        # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã –∏—Ö –º–æ–∂–Ω–æ –±—ã–ª–æ –∏–∑–º–µ–Ω—è—Ç—å:
        data = request.data.copy()
        # –ù–∞—à–∞ –∫–∞—Å—Ç–æ–º–Ω–∞—è –ª–æ–≥–∏–∫–∞:
        if 'author' not in data or not data['author']:
            data['author'] = 1
        # –î–∞–ª—å—à–µ –∏–¥–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–∑ DRF:
        serializer = self.get_serializer(data=data)
        serializer.is_valid(raise_exception=True)
        # self.perform_create –≤—ã–∑—ã–≤–∞–µ—Ç serializer.save():
        self.perform_create(serializer)
        headers = self.get_success_headers(serializer.data)
        return Response(serializer.data, status=status.HTTP_201_CREATED, headers=headers)



# –ö–ª–∞—Å—Å BookDetailUpdateDeleteView on RetrieveUpdateDestroyAPIView –∑–∞–º–µ–Ω—è–µ—Ç –∫–ª–∞—Å—Å BookDetailUpdateDeleteView
# –≤—ã—à–µ –≤ –∫–æ–¥–µ, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —Å–¥–µ–ª–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ GenericAPIView.
# –¢–µ–ø–µ—Ä—å –∫–ª–∞—Å—Å –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç RetrieveUpdateDestroyAPIView –∏–∑ rest_framework.generics, –∫–æ—Ç–æ—Ä—ã–π –£–º–µ–µ—Ç:
#   - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å GET –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (Retrieve)
#   - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å PUT/PATCH –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (Update)
#   - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å DELETE –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (Destroy)
class BookDetailUpdateDeleteView(RetrieveUpdateDestroyAPIView):
    queryset = Book.objects.all()
    serializer_class = BookSerializer
    permission_class = [IsOwnerOrReadOnly]

    # # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞:
    # def get_object(self):
    #     # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º pk –∏–∑ URL, –∫–∞–∫ –æ–±—ã—á–Ω–æ:
    #     pk = self.kwargs.get('pk')
    #
    #     try:
    #         # –ò—â–µ–º –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç pk –ò –ù–ï —è–≤–ª—è–µ—Ç—Å—è –∑–∞–±–∞–Ω–µ–Ω–Ω—ã–º:
    #         book = Book.objects.get(pk=pk, is_banned=False)
    #     except Book.DoesNotExist:
    #         # –ï—Å–ª–∏ –∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –∑–∞–±–∞–Ω–µ–Ω–∞, –≤—ã–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É 404:
    #         raise NotFound(detail=f"Book with id '{pk}' not found or is banned.")
    #
    #     return book

    # ===  –ê—Ç—Ä–∏–±—É—Ç serializer_class:
    # Les27-Django_25-REST_p3-16_07.pdf, pp. 8, 14.
    # –£–∫–∞–∑—ã–≤–∞–µ—Ç –∫–ª–∞—Å—Å —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è
    # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏ Python –∏ JSON
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    #   ‚óè –£–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –∫–∞–∫ –∞—Ç—Ä–∏–±—É—Ç –∫–ª–∞—Å—Å–∞.
    #   ‚óè –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Ç–æ–¥ get_serializer_class().
    # ===  –ú–µ—Ç–æ–¥ get_serializer_context()
    # Les27-Django_26-REST_p3-16_07.pdf, p. 22, 29.
    # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä—É.
    # –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä—É –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
    # –ú–µ—Ç–æ–¥ get_serializer_context() –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    # –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ª–æ–≤–∏–π –∑–∞–ø—Ä–æ—Å–∞ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö —á–µ—Ä–µ–∑
    # –∫–æ–Ω—Ç–µ–∫—Å—Ç. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç API –±–æ–ª–µ–µ –¥–∏–Ω–∞–º–∏—á–Ω—ã–º –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º.
    def get_serializer_context(self):
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç:
        context = super().get_serializer_context()
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ–≥–æ —Ñ–ª–∞–≥ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞:
        context['include_related'] = self.request.query_params.get('include_related', 'false')
        return context



#
class GenreDetailUpdateDeleteView(RetrieveUpdateDestroyAPIView):
    queryset = Genre.objects.all()
    serializer_class = GenreSerializer

    # –ì–æ–≤–æ—Ä–∏–º DRF –∏—Å–∫–∞—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ –ø–æ–ª—é 'name' –≤ –º–æ–¥–µ–ª–∏ Genre:
    lookup_field = 'name'

    # –≠—Ç–æ—Ç –∞—Ç—Ä–∏–±—É—Ç –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω, –µ—Å–ª–∏ –∏–º—è –≤ URL —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å lookup_field,
    # –Ω–æ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏ –ª—É—á—à–µ –µ–≥–æ —É–∫–∞–∑–∞—Ç—å.
    lookup_url_kwarg = 'name'


#
class SimpleBookListCreateView(ListCreateAPIView):
    queryset = SimpleBook.objects.all()
    serializer_class = SimpleBookSerializer


# \\\\\\\\   ViewSets  /////////////////////////////////////////////////////////////////////

# #
# class GenreReadOnlyView(ReadOnlyModelViewSet):
#     queryset = Genre.objects.all()
#     serializer_class = GenreSerializer
#



#
class GenreViewSet(ModelViewSet):
    queryset = Genre.objects.all()
    serializer_class = GenreSerializer
    # +++ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:
    permission_classes = [DjangoModelPermissions, CanGetGenresStatisticPermission]

    # –ù–æ–≤—ã–π –∫–∞—Å—Ç–æ–º–Ω—ã–π –º–µ—Ç–æ–¥:
    @action(detail=False, methods=['get'])
    def statistics(self, request):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∂–∞–Ω—Ä–∞.
        """
        # –° –ø–æ–º–æ—â—å—é annotate –¥–æ–±–∞–≤–ª—è–µ–º –∫ –∫–∞–∂–¥–æ–º—É –∂–∞–Ω—Ä—É –ø–æ–ª–µ book_count:
        genres_with_book_counts = Genre.objects.annotate(book_count=Count('book'))
        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞:
        data = [
            {
                "id": genre.id,
                "genre": genre.name,
                "book_count": genre.book_count
            }
            for genre in genres_with_book_counts
        ]
        return Response(data)




# \\\\\\\\   Mixins  /////////////////////////////////////////////////////////////////////

# #
# class GenreListRetrieveUpdateViewSet(mixins.ListModelMixin,
#                                      mixins.RetrieveModelMixin,
#                                      mixins.UpdateModelMixin,
#                                      GenericViewSet):
#     queryset = Genre.objects.all()
#     serializer_class = GenreSerializer



# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# –ö–ª–∞—Å—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Ä–æ–≥–∏—Ö –∫–Ω–∏–≥ —Å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ list.
# Les27-Django_25-REST_p3-16_07.pdf, sl. 51-52.
class ExpensiveBooksView(ListAPIView):
    serializer_class = BookSerializer
    # –ú—ã –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º queryset, —Ç.–∫. –±—É–¥–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏.
    # –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –º—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ get_queryset:
    def get_queryset(self):
        # 1. –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω—é—é —Ü–µ–Ω—É –≤—Å–µ—Ö –∫–Ω–∏–≥:
        average_price = Book.objects.aggrigate(avg_price=Avg('price'))['avg_price']
        if average_price is None:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –Ω–∞–±–æ—Ä, –µ—Å–ª–∏ –∫–Ω–∏–≥ –Ω–µ—Ç:
            return Book.objects.none()
        # 2. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–∏–≥–∏, —Ü–µ–Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π:
        return Book.objects.filter(price__gt=average_price)



#
# Les35-Django_31-AuTHORisation_1-24_07.pdf, sl. 9.
class UserBookListView(ListAPIView):
    serializer_class = BookSerializer
    permission_classes = [IsAuthenticated]

    # –ü–ï–†–ï–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î:
    def get_queryset(self):
        """
        –ú–µ—Ç–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö.
        –ú—ã –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –µ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥–∏, –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ
        —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        # –§–∏–ª—å—Ç—Ä—É–µ–º –∫–Ω–∏–≥–∏ –ø–æ –ø–æ–ª—é owner:
        return Book.objects.filter(owner=self.request.user)



